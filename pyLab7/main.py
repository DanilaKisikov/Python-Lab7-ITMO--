import random
import time
import numpy as np

countOfNumbersInArrays = 1000000
rangeValue = 1000000


def timeCounter(func):
    def _wrapper(*args, **kwargs):
        startTime = time.perf_counter()
        result = func(*args, **kwargs)
        takenTime = time.perf_counter() - startTime
        return result, takenTime
    return _wrapper


@timeCounter
def generateArray():
    array = []

    for i in range(countOfNumbersInArrays):
        array.append(random.randint(-rangeValue, rangeValue))
    return array


@timeCounter
def generateRandomMap():
    map = {}

    for i in range(countOfNumbersInArrays):
        key = random.randint(-rangeValue, rangeValue)
        value = random.randint(-rangeValue, rangeValue)
        map[key] = value
    return map


@timeCounter
def multiplyMap(map):
    result = []

    for key, value in map.items():
        result.append(key * value)
    return result


@timeCounter
def multiply(array1, array2):
    resultArray = []

    for i in range(len(array1)):
        resultArray.append(array1[i] * array2[i])
    return resultArray


@timeCounter
def generateNPArray():
    array = np.random.randint(-rangeValue, rangeValue, size=(1, countOfNumbersInArrays))

    return array


if __name__ == '__main__':
    np1 = generateNPArray()
    np2 = generateNPArray()
    print("NP generated by " + str(np1[1] + np2[1]))

    startTime = time.perf_counter()
    np3 = np.multiply(np1[0], np2[0])
    npTime = time.perf_counter() - startTime
    print("NP multiplied by " + str(npTime) + "\n")

    map1 = generateRandomMap()
    print("Map generated by " + str(map1[1]))

    map2 = multiplyMap(map1[0])
    print("Map multiplied by " + str(map2[1]) + "\n")

    print("The differance is " + str(map2[1] / npTime))
